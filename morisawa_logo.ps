%!PS-Adobe-3.0
%%Creator: cairo 1.14.0 (http://cairographics.org)
%%CreationDate: Mon Oct 12 18:25:54 2015
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: A4 595 842 0 () ()
%%BoundingBox: 81 678 508 774
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: A4
%%PageBoundingBox: 81 678 508 774
596 842 cairo_set_page_size
%%EndPageSetup
q 81 678 427 96 rectclip q
Q q
81.672 773.816 426 -95 re W n
q
81 774 427 -96 re W n
[ 1 0 0 1 0 0 ] concat
  q
0 g
128.109 680.812 m 121.227 682.309 115.098 687.621 111.598 695.129 c 109.227
 700.207 108.574 703.504 108.574 710.367 c 108.574 715.258 l 82.652 715.258
 l 82.652 738.777 l 108.574 738.777 l 108.574 750.055 l 82.652 750.055 l
 82.652 773.578 l 186.332 773.578 l 186.332 750.055 l 139.531 750.055 l 
139.531 738.777 l 186.332 738.777 l 186.332 715.258 l 139.504 715.258 l 
139.578 710.977 l 139.652 706.699 139.652 706.691 140.348 705.695 c 140.727
 705.145 141.43 704.453 141.906 704.156 c 142.773 703.617 l 164.555 703.551
 l 186.332 703.488 l 186.332 680.457 l 157.953 680.477 l 135.32 680.492 
129.277 680.559 128.109 680.812 c h
128.109 680.812 m f
284.012 733.977 m 302.492 733.977 l 302.492 716.695 l 330.094 716.695 l
 330.094 733.977 l 357.691 733.977 l 357.691 720.527 l 357.691 707.652 357.672
 707.039 357.223 706.156 c 356.633 704.996 355.535 704.066 354.387 703.746
 c 353.832 703.594 349.289 703.5 342.395 703.5 c 331.293 703.496 l 331.293
 680.457 l 349.375 680.457 l 370.031 680.457 369.117 680.375 373.652 682.602
 c 380.852 686.137 386.207 693.422 388.312 702.535 c 388.676 704.109 388.738
 706.195 388.828 719.156 c 388.93 733.977 l 408.332 733.977 l 408.332 757.258
 l 388.895 757.258 l 388.895 773.578 l 357.691 773.578 l 357.691 757.258
 l 330.094 757.258 l 330.094 773.578 l 302.492 773.578 l 302.492 757.258
 l 284.012 757.258 l f
408.332 716.695 m 435.934 716.695 l 435.934 750.297 l 475.781 750.297 l
 475.715 728.359 l 475.652 706.422 l 474.906 705.5 l 474.496 704.992 473.797
 704.359 473.348 704.098 c 472.562 703.633 472.035 703.613 458.312 703.551
 c 444.094 703.48 l 444.094 680.445 l 465.512 680.512 l 486.934 680.578 
l 489.395 681.445 l 496.754 684.039 502.555 690.238 505.301 698.441 c 506.801
 702.918 506.734 700.996 506.734 738.918 c 506.734 773.578 l 408.332 773.578
 l 408.332 757.258 l f
284.012 773.578 m 253.055 773.578 l 253.055 707.172 l 252.496 706.113 l
 252.188 705.531 251.477 704.734 250.914 704.336 c 249.891 703.617 l 234.793
 703.551 l 219.691 703.484 l 219.691 680.445 l 263.973 680.578 l 266.438
 681.445 l 269.762 682.617 272.371 684.234 275.035 686.766 c 279.387 690.906
 282.293 696.211 283.527 702.277 c 283.984 704.504 284.012 705.559 284.012
 719.312 c h
284.012 773.578 m f
191.852 745.137 m 191.852 773.578 l 219.453 773.578 l 219.453 716.695 l
 191.852 716.695 l h
191.852 745.137 m f
  Q
Q
Q Q
showpage
%%Trailer
%%EOF
